/* standard.css */
{%
Dim responseColourPrimary =CurrentADC.PropValue("responseColourPrimary")
Dim fontColour =CurrentADC.PropValue("fontColour")
Dim responseShadow =CurrentADC.PropValue("responseShadow")
Dim responseSelectedColourPrimary =CurrentADC.PropValue("responseSelectedColourPrimary")
Dim responseSelectedFontColour =CurrentADC.PropValue("responseSelectedFontColour")
Dim responseSelectedShadow =CurrentADC.PropValue("responseSelectedShadow")

Dim borderColour =CurrentADC.PropValue("borderColour")
Dim borderThickness =CurrentADC.PropValue("borderThickness")
Dim borderStyle =CurrentADC.PropValue("borderStyle")
Dim responseSelectedBorderColour =CurrentADC.PropValue("responseSelectedBorderColour")
Dim responseSelectedBorderThickness =CurrentADC.PropValue("responseSelectedBorderThickness")
Dim responseSelectedBorderStyle =CurrentADC.PropValue("responseSelectedBorderStyle")
Dim borderRadius =CurrentADC.PropValue("borderRadius")

Dim responseTextAlign =CurrentADC.PropValue("responseTextAlign")
Dim responseImageAlignment =CurrentADC.PropValue("responseImageAlignment")
Dim responseAlign =CurrentADC.PropValue("responseAlign")
Dim displayResponseText =CurrentADC.PropValue("displayResponseText")
Dim responseTextPosition =CurrentADC.PropValue("responseTextPosition")

Dim responseHoverColourPrimary =CurrentADC.PropValue("responseHoverColourPrimary")
Dim responseHoverFontColour =CurrentADC.PropValue("responseHoverFontColour")
Dim responseHoverBorderColour =CurrentADC.PropValue("responseHoverBorderColour")
Dim responseHoverBorderThickness =CurrentADC.PropValue("responseHoverBorderThickness")
Dim responseHoverBorderStyle =CurrentADC.PropValue("responseHoverBorderStyle")
Dim responseHoverShadow =CurrentADC.PropValue("responseHoverShadow")

Dim showResponseHoverColour =CurrentADC.PropValue("showResponseHoverColour")
Dim showResponseHoverFontColour =CurrentADC.PropValue("showResponseHoverFontColour")
Dim showResponseHoverBorder =CurrentADC.PropValue("showResponseHoverBorder")

Dim responseMargin =CurrentADC.PropValue("responseMargin")
Dim responsePadding =CurrentADC.PropValue("responsePadding")
Dim responseTextPadding =CurrentADC.PropValue("responseTextPadding")
Dim responseImagePadding =CurrentADC.PropValue("responseImagePadding")

Dim responseTextLineHeight =CurrentADC.PropValue("responseTextLineHeight")

Dim fontSize =CurrentADC.PropValue("fontSize")
Dim responseHeight =CurrentADC.PropValue("responseHeight")
Dim responseWidth =CurrentADC.PropValue("responseWidth")

Dim startAreaWidth =CurrentADC.PropValue("startAreaWidth")
Dim stackResponses =CurrentADC.PropValue("stackResponses")

Dim showCircleValues =CurrentADC.PropValue("showCircleValues")

Dim circleColour =CurrentADC.PropValue("circleColour")
Dim circleBorderColour =CurrentADC.PropValue("circleBorderColour")
Dim altCircleColour =CurrentADC.PropValue("altCircleColour")
Dim altCircleBorderColour =CurrentADC.PropValue("altCircleBorderColour")
Dim circleBorderWidth =CurrentADC.PropValue("circleBorderWidth")
Dim circleHoverColour =CurrentADC.PropValue("circleHoverColour")

Dim innerCircleImage =CurrentADC.PropValue("innerCircleImage")
Dim innerCircleColour =CurrentADC.PropValue("innerCircleColour")
Dim innerCircleTextColour =CurrentADC.PropValue("innerCircleTextColour")

Dim controlAlign =CurrentADC.PropValue("controlAlign")

Dim targetHorizontalPosition = CurrentADC.PropValue("targetHorizontalPosition")

IF responseHeight = "" Then
	responseHeight = "auto"
EndIF
IF responseWidth = "" Then
	responseWidth = "auto"
EndIF
%}

/* General */
#adc_{%= CurrentADC.InstanceId%} 
{ 
	text-align:{%= responseAlign%};
    position:relative;
}

/* Reponses */
#adc_{%= CurrentADC.InstanceId%} .responseItem
{   
	
	/* Decoration */
	{% IF borderThickness = "none" Then %}
		border: none;
	{% Else %}
		border: {%= borderThickness%} {%= borderStyle%} rgb({%= borderColour%});
	{% EndIF %}	
	background-color: rgb({%= responseColourPrimary%});
	
	/* Effects */
	-webkit-border-radius:	{%= borderRadius%}; 
	-moz-border-radius:		{%= borderRadius%}; 
	-khtml-border-radius:	{%= borderRadius%}; 
	border-radius:			{%= borderRadius%};
	
	-webkit-box-shadow: {%= responseShadow%};
	-moz-box-shadow: {%= responseShadow%};
	box-shadow: {%= responseShadow%};
	
	text-align: center;
		
	height: {%= responseHeight%};
	width: {%= responseWidth%};
	
	padding: {%= responsePadding%};
	{% IF stackResponses = "1" And responseAlign = "center" Then %}
		margin: 0px auto;
		float:none;
	{% Else %}
		margin: {%= responseMargin%};
		float:left;
	{% EndIF %}	
    
    position:relative;
	
	z-index: 100;
}


#adc_{%= CurrentADC.InstanceId%} .responseItem:hover
{
	
	/* Decoration */
	{% IF showResponseHoverBorder = "1" Then %}
		border: {%= responseHoverBorderThickness%} {%= responseHoverBorderStyle%} rgb({%= responseHoverBorderColour%});
	{% EndIF %}
	{% IF showResponseHoverColour = "1" Then %}
		background-color: rgb({%= responseHoverColourPrimary%});
	{% EndIF %}
	-webkit-box-shadow: {%= responseHoverShadow %};
	-moz-box-shadow: {%= responseHoverShadow %};
	box-shadow: {%= responseHoverShadow %};
}

#adc_{%= CurrentADC.InstanceId%} .responseItem img
{  
	pointer-events:none;
	margin:0px auto;
	vertical-align:middle;
	float:{%= responseImageAlignment%};
	padding:{%= responseImagePadding%};
}

#adc_{%= CurrentADC.InstanceId%} .response_text 
{ 
	pointer-events:none;
	display:{%= displayResponseText%};
	font-size:{%= fontSize%};
	text-align:{%= responseTextAlign%};
	color:rgb({%= fontColour%});
	
	padding:{%= responseTextPadding%};
	line-height:{%= responseTextLineHeight%};
	
	{% IF responseTextPosition = "left" or responseTextPosition = "right" Then %}
		float: {%= responseTextPosition%};
	{% EndIF %}
	
	word-wrap: break-word;
}

#adc_{%= CurrentADC.InstanceId%} .responseItem:hover .response_text, #adc_{%= CurrentADC.InstanceId%} .responseItemMini:hover .response_text 
{ 
	{% IF showResponseHoverFontColour = "1" Then %}
		color:rgb({%= responseHoverFontColour%});
	{% EndIF %}
}

#adc_{%= CurrentADC.InstanceId%} .startArea { 
    display:block;
	
	{% IF controlAlign = "center" Then %}
		margin:0px auto;
	{% EndIF %}
	
	{% IF stackResponses = "1" And responseAlign = "center" Then %}
		text-align:center;
	{% EndIF %}
	
	{% IF targetHorizontalPosition = "right" Then %}
    	float:left;
	{% Else %}
		float:right;
	{% EndIF %}	
}


#adc_{%= CurrentADC.InstanceId%} .responseActive { 
	/* Decoration */	
	{% IF responseSelectedBorderThickness = "none" Then %}
		border: none;
	{% Else %}
		border: {%= responseSelectedBorderThickness%} {%= responseSelectedBorderStyle%} rgb({%= responseSelectedBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= responseSelectedColourPrimary%});
}
#adc_{%= CurrentADC.InstanceId%} .responseActive .response_text {
	color:rgb({%= responseSelectedFontColour%});
}

#adc_{%= CurrentADC.InstanceId%} .targetContainer { 
    display:block; 
    position:absolute; 
    overflow:hidden; 
}

#adc_{%= CurrentADC.InstanceId%} .circle { 
    display:block; 
    background:rgb({%= circleColour%}); 
    border:{%= circleBorderWidth %} solid rgb({%= circleBorderColour%}); 
    position:absolute; 
    box-sizing:border-box;
}

#adc_{%= CurrentADC.InstanceId%} .innerCircle { 
    display:block; 
    background:rgb({%= innerCircleColour%}); 
    border:{%= circleBorderWidth %} solid rgb({%= circleBorderColour%}); 
    position:absolute; 
	background-size:100% 100%;
}
#adc_{%= CurrentADC.InstanceId%} .innerCircle .circleText { 
	font-family:inherit;
	pointer-events:none;
    text-align:center;
    box-sizing:border-box;
    font-size:{%= fontSize%};
    color:rgb({%= fontColour%}); 
}
#adc_{%= CurrentADC.InstanceId%} .innerCircle .circleImg { 
	pointer-events:none;
}


#adc_{%= CurrentADC.InstanceId%} .over, #adc_{%= CurrentADC.InstanceId%} .alt.over {
    background: rgb({%= circleHoverColour%}); 
    border-color: rgb({%= circleHoverColour%}); 
}

#adc_{%= CurrentADC.InstanceId%} .alt {
    background:rgb({%= altCircleColour%}); 
    border:{%= circleBorderWidth %} solid rgb({%= altCircleBorderColour%}); 
}
#adc_{%= CurrentADC.InstanceId%} .responseTargetLayer { display:block; width:100%; height:100%; position:absolute; top:0px; left:0px; }

#adc_{%= CurrentADC.InstanceId%} .circleNumber {
	font-family:inherit;
	pointer-events:none;
	color:rgb({%= fontColour%});
	
	{% IF showCircleValues = "1" Then %}
		display:inline;
	{% Else %}
		display:none;
	{% EndIF %}
	
}